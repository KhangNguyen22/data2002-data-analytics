# Simpson's paradox
library(tidyverse)
## Don't use install packages
# install.packages("palmerpenguins")
library(palmerpenguins)
?penguins
# https://github.com/allisonhorst/palmerpenguins
glimpse(penguins)
# plot bill length against depth
```{r import_data, message=FALSE, results="hide"}
essage=FALSE, results="hide"}
knitr::opts_chunk$set(echo = TRUE)
# Simpson's paradox
library(tidyverse)
## Don't use install packages
# install.packages("palmerpenguins")
library(palmerpenguins)
?penguins
# https://github.com/allisonhorst/palmerpenguins
glimpse(penguins)
# plot bill length against depth
knitr::opts_chunk$set(echo = TRUE)
# Simpson's paradox
library(tidyverse)
## Don't use install packages
# install.packages("palmerpenguins")
library(palmerpenguins)
?penguins
# https://github.com/allisonhorst/palmerpenguins
glimpse(penguins)
# plot bill length against depth
penguins %>% ggplot()
penguins %>% ggplot()
penguins
penguins %>% ggplot() +
aes(x=bill_length_mm, y=bill_depth_mm) +
geom_point()
penguins
penguins %>% ggplot() +
aes(x=bill_length_mm, y=bill_depth_mm)
penguins %>% ggplot() +
aes(x=bill_length_mm, y=bill_depth_mm) +
geom_point()
penguins %>% ggplot() +
aes(x=bill_length_mm, y=bill_depth_mm, colour = species) +
geom_point() +
geom_smooth(method="lm", se= FALSE)
penguins %>% ggplot() +
aes(x=bill_length_mm, y=bill_depth_mm) +
geom_point(aes(colour = species)) +
geom_smooth(aes(colour = species),method="lm", se= FALSE)
penguins %>% ggplot() +
aes(x=bill_length_mm, y=bill_depth_mm) +
geom_point() +
geom_smooth(method="lm", se= FALSE) +
geom_smooth(aes(colour = species),method="lm", se= FALSE)
# Use geom_point to plot the points on scatterplot, geom_smooth to find the regressional line
penguins %>% ggplot() +
aes(x=bill_length_mm, y=bill_depth_mm) +
geom_point(aes(colour = species)) +
geom_smooth(method="lm", se= FALSE) +
geom_smooth(aes(colour = species),method="lm", se= FALSE)
# Use geom_point to plot the points on scatterplot, geom_smooth to find the regressional line
penguins %>% ggplot() +
aes(x=bill_length_mm, y=bill_depth_mm) +
geom_point(aes(colour = species)) +
geom_smooth(method="lm", se= FALSE) +
geom_smooth(aes(colour = species),method="lm", se= FALSE)
# Use geom_point to plot the points on scatterplot, geom_smooth to find the regressional line
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
library("khangs")
?khang
??khang
library("khang")
# here's a link to a copy I took in case the above link dies.
# https://raw.githubusercontent.com/DATA2002/data/master/ardd_fatalities.csv
fdata = readr::read_csv(bitre_link)
library("tidyverse") # loads readr, dplyr, ggplot2, ...
bitre_link = "https://data.gov.au/data/dataset/5b530fb8-526e-4fbf-b0f6-aa24e84e4277/resource/fd646fdc-7788-4bea-a736-e4aeb0dd09a8/download/ardd_fatalities.csv"
# here's a link to a copy I took in case the above link dies.
# https://raw.githubusercontent.com/DATA2002/data/master/ardd_fatalities.csv
fdata = readr::read_csv(bitre_link)
# If you download the data file first and save it as FILE_NAME.csv
# and it is in the same folder, you can use:
# fdata = readr::read_csv("FILE_NAME.csv")
glimpse(fdata)
head(dataset, 10)
head(fdata, 10)
fdata["State"]
unique(data["State"])
type(data["State"])
typeof(data["State"])
typeof(data["State"])
?str(data["State"])
?str(data["State"])
as.vector(data["State"])
as.vector(t(fdata))
as.vector(t(fdata["state"]))
as.vector(t(fdata["states"]))
head(fdata)
#as.vector(t(fdata[""]))
# head(fdata)
as.vector(t(fdata["State"]))
# head(fdata)
unique(as.vector(t(fdata["State"])))
cereal = readr::read_csv("https://github.com/DATA2002/data/raw/master/Cereal.csv",
na = "-1")
glimpse(cereal)
glimpse(cereal)
cereal = readr::read_csv("https://github.com/DATA2002/data/raw/master/Cereal.csv",
na = "-1")
glimpse(cereal)
HairEyeColor
